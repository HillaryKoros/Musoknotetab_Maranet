
services:
  web:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/mediafiles
    ports:
      - "8000:8000"
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DEBUG=1
      - SECRET_KEY=${SECRET_KEY}
      - DJANGO_ALLOWED_HOSTS=localhost,127.0.0.1
      - DJANGO_SETTINGS_MODULE=flood_watch_system.settings
      - CORS_ALLOWED_ORIGINS=True
      - CORS_ORIGIN_WHITELIST=http://localhost:5173
      - API_VERSION=v1
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REMOTE_FOLDER_BASE=${REMOTE_FOLDER_BASE}
      - SFTP_HOST=${SFTP_HOST}
      - SFTP_PORT=${SFTP_PORT}
      - SFTP_USERNAME=${SFTP_USERNAME}
      - SFTP_PASSWORD=${SFTP_PASSWORD}
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: unless-stopped
    networks:
      - app-network

  db:
    image: postgres:17-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - app-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: production  # Use production target by default for serving static files
    ports:
      - "5173:80"  # Frontend production port exposed via nginx
    environment:
      - NODE_ENV=production  # Set to production mode in the container
      - VITE_API_URL=http://localhost:8000  # Backend API URL
    volumes:
      - ./frontend:/app  # Mount the frontend directory for development mode
    depends_on:
      - web
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  static_volume:
  media_volume: